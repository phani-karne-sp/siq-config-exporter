<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
      <section name="SiqConfigReport.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
      <section name="SiqConfigReport.Worksheets" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
      <section name="SiqConfigReport.Queries" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
  </configSections>

  
  <log4net>
    <appender name="Console" type="log4net.Appender.ColoredConsoleAppender">
      <mapping>
        <level value="ERROR"/>
        <foreColor value="Red, HighIntensity"/>
      </mapping>
      <mapping>
        <level value="Info"/>
        <foreColor value="Cyan"/>
      </mapping>
      <mapping>
        <level value="DEBUG"/>
        <foreColor value="Green"/>
      </mapping>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d{ISO8601} %5p %t %c{4}:%L - %m%n"/>
      </layout>
    </appender>

    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="siq-config-exporter-console.log"/>
      <appendToFile value="True"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="10"/>
      <maximumFileSize value="50MB"/>
      <staticLogFileName value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d{ISO8601} %5p %t %c{4}:%L - %m%n"/>
      </layout>
    </appender>

    <root>
      <level value="INFO"/>
      <appender-ref ref="Console"/>
      <appender-ref ref="RollingFileAppender"/>
    </root>

    <logger name="log4net" additivity="false">
      <level value="off"/>
      <appender-ref ref="RollingFileAppender"/>
    </logger>

    <logger name="NHibernate" additivity="false">
      <level value="Off"/>
      <appender-ref ref="RollingFileAppender"/>
    </logger>
  </log4net>
  

  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <probing privatePath="C:\Program Files\Sailpoint"/>
    </assemblyBinding>
  </runtime>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/>
  </startup>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri=""/>
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400"/>
      </providers>
    </roleManager>
  </system.web>
  
  
  <applicationSettings>
    <!-- Statements that extract SecurityIQ configuration information from the database -->
    <SiqConfigReport.Properties.Settings>
      <setting name="dllAssemblyFileExtension" serializeAs="String">
        <value>.dll</value>
      </setting>
    </SiqConfigReport.Properties.Settings>
    <SiqConfigReport.Worksheets>
      <setting name="dbInfo" serializeAs="String">
        <value>DB Info</value>
      </setting>
      <setting name="siqConfig" serializeAs="String">
        <value>Misc Config</value>
      </setting>
      <setting name="email" serializeAs="String">
        <value>Email</value>
      </setting>
      <setting name="license" serializeAs="String">
        <value>Licenses</value>
      </setting>
      <setting name="coreServices" serializeAs="String">
        <value>Core Services</value>
      </setting>
      <setting name="idc" serializeAs="String">
        <value>IDC</value>
      </setting>
      <setting name="wpc" serializeAs="String">
        <value>WPC</value>
      </setting>
      <setting name="apps" serializeAs="String">
        <value>Apps</value>
      </setting>
      <setting name="appConfigs" serializeAs="String">
        <value>App Configs</value>
      </setting>
      <setting name="tasks" serializeAs="String">
        <value>Tasks</value>
      </setting>
      <setting name="taskResults" serializeAs="String">
        <value>Task Results</value>
      </setting>
      <setting name="healthCenter" serializeAs="String">
        <value>Health Center</value>
      </setting>
      <setting name="users" serializeAs="String">
        <value>Users</value>
      </setting>
    </SiqConfigReport.Worksheets>
    <SiqConfigReport.Queries>
      <setting name="dbInfo1" serializeAs="String">
        <value>select @@SERVERNAME [DB ServerName], @@VERSION Version;</value>
      </setting>
      <setting name="dbInfo2" serializeAs="String">
        <value>select name [SIQ DB Name], create_date [SIQ DB Create Date] FROM sys.databases where name = 'SecurityIQDB';</value>
      </setting>
      <setting name="siqConfig1" serializeAs="String">
        <value>select scv.name, scv.value from [whiteops].[system_configuration_value] scv where scv.name in('Company Name','Version');</value>
      </setting>
      <setting name="siqConfig2" serializeAs="String">
        <value>select name, value from [crowdSource].[system_configuration_value] where name in('SMTP_HOST','Web Site URL','SystemEmailAddress');</value>
      </setting>
      <setting name="email" serializeAs="String">
        <value>select name, value from [crowdSource].[system_configuration_value] where name in('SMTP_HOST','Web Site URL','SystemEmailAddress');</value>
      </setting>
      <setting name="license" serializeAs="String">
        <value>select l.sku, l.description, l.description, l.module_name, l.license_utilization from whiteops.license l;</value>
      </setting>
      <setting name="installServer" serializeAs="String">
        <value>select * from whiteops.install_server;</value>
      </setting>
      <setting name="installService" serializeAs="String">
        <value>select ins.name, ins.technical_name, inss.name InstalledOnServer, ins.port, ins.default_port, ins.server_id, insc.name ServiceType, ins.status_update_date, ins.agent_name, ins.version from whiteops.install_service ins, whiteops.install_service_category insc, whiteops.install_server inss where ins.install_service_category_id = insc.id and ins.installed_server_id = inss.id order by inss.name;</value>
      </setting>
      <setting name="idc" serializeAs="String">
        <value>select name [IDC Name] from whiteops.ra_identity_collector where id &gt; 0;</value>
      </setting>
      <setting name="wpc" serializeAs="String">
        <value>select wpc.name [DEC Name], wpct.name [DEC Type], wpc.wpc_configuration_id, wpc.is_logical_wpc, wpc.status_update_date, wpc.logical_status_message, wpc.first_seen_alive from whiteops.wpc wpc, whiteops.wpc_type wpct where wpc.id &gt; 999 and wpc.wpc_type_id = wpct.id;</value>
      </setting>
      <setting name="apps" serializeAs="String">
        <value>select c.name, b.name BamName , b.description [desc] , b.domain_netbios_name NetBIOSname, b.first_crawled_date FirstCrawl, b.last_crawling_time LastCrawl, bt.name BamType, bt.group_code_name BAMGroup , bt.supports_data_classification CanDC, raidc.name IDCname , b.data_classification_installed DCinstalled, pb.installed BAMinstalled, pb.logical_status_message , pb.host_address HostName, isrv.name EventManagerName, isrv2.agent_name PermColl from whiteops.bam b, whiteops.bam_type bt, whiteops.ra_identity_collector raidc, whiteops.physical_bam pb, whiteops.install_service isrv, whiteops.install_service isrv2, whiteops.container c where b.bam_type_id = bt.id and b.ra_identity_collector_id = raidc.id and b.bam_configuration_id = pb.bam_id and b.event_manager_service_id = isrv.id and b.ra_service_id = isrv2.id and b.container_id = c.id;</value>
      </setting>
      <setting name="appConfigs" serializeAs="String">
        <value>select c.name container,  b.name, bcv.name ConfigName, bcv.value from whiteops.bam_configuration_value bcv, whiteops.bam b, whiteops.container c where b.bam_configuration_id = bcv.bam_configuration_id and b.container_id = c.id and bcv.name NOT IN('password','pkcs7Password') order by c.name, b.name, bcv.name;</value>
      </setting>
      <setting name="tasks" serializeAs="String">
        <value>select st.created_by, st.[name] TaskName, tt.name TaskType, tst.name TaskSubType, next_run, once_date, schedt.name Freq from whiteops.schedule_task st, whiteops.task_type tt,whiteops.task_sub_type tst, whiteops.schedule_type schedt where st.task_type_id = tt.id and st.task_sub_type_id = tst.id and st.schedule_type_id = schedt.id;</value>
      </setting>
      <setting name="taskResults" serializeAs="String">
        <value>select t.[name] TaskName, tt.name TaskType, tst.name TaskSubType, schedt.name Freq, t.start_date, t.end_date, t.progress, t.result, t.details, [is].agent_name from whiteops.task t left join whiteops.task_type tt ON  t.task_type_id = tt.id left join whiteops.task_sub_type tst ON t.task_sub_type_id = tst.id left join whiteops.schedule_type schedt ON t.schedule_task_id = schedt.id left join whiteops.install_service [is] ON t.install_service_id =  [is].id order by t.name, t.start_date desc;</value>
      </setting>
      <setting name="healthCenter" serializeAs="String">
        <value>SELECT x.* FROM ( SELECT DISTINCT name FROM whiteops.install_service ) c CROSS APPLY ( SELECT TOP 100 hce.date, ts.name taskStatusName, ins.agent_name, ins.name serviceName, hce.title, hce.details, hce.level_enum_id from  [whiteops].[health_center_event]  hce, whiteops.install_service ins, whiteops.task_status ts where ins.id = hce.source_id and hce.task_status_enum_id = ts.id and c.name=ins.name order by source_id, [date] desc) x order by servicename, [date] desc;</value>
      </setting>
      <setting name="users" serializeAs="String">
        <value>select u.name, u.first_name + ' ' + u.last_name FullName, u.last_login LastSIQlogin, ra.user_full_name ConnectedUser from whiteops.[user] u left join whiteops.ra_user ra on u.ra_user_id = ra.id;</value>
      </setting>
    </SiqConfigReport.Queries>
  </applicationSettings>
</configuration>
